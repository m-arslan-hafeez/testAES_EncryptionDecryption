<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        hgAAAABJRU5ErkJggg==
</value>
  </data>
</root>